---
name: build-release
env:
  JAVA_VERSION: 17
  RUBY_VERSION: 3.2.1
  FLUTTER_VERSION: 3.7.6
  BUILD_DIR: /home/runnery/app
on:
  push:
    branches:
      - main
jobs:
  get-tagged:
    name: get tagged
    runs-on: macos-12
    environment: prod
    outputs:
      tagged: ${{ steps.gettag.outputs.tagged }}
      version: ${{ steps.gettag.outputs.version }}
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: get tag
        id: gettag
        shell: bash
        run: |
          echo "version=$(cat pubspec.yaml | grep version: | sed 's#version: ##' | sed 's#\+.*##' | tr -d '\n')" >> "$GITHUB_OUTPUT"
          git show-ref --tags --verify --quiet -- "refs/tags/v$(cat pubspec.yaml | grep version: | sed 's#version: ##' | sed 's#\+.*##' | tr -d '\n')" && echo 'tagged=0' >> "$GITHUB_OUTPUT" || echo 'tagged=1' >> "$GITHUB_OUTPUT"

  check-screenshots-and-icons:
    name: checks screenshots and icons
    runs-on: macos-12
    environment: prod
    needs: get-tagged
    outputs:
      screenshots-count: ${{ steps.screenshots.outputs.count }}
    steps:
      - uses: actions/checkout@v3
      - name: download android screenshots
        uses: dawidd6/action-download-artifact@v2
        id: check-exists
        with:
          workflow: build-release.yml
          github_token: ${{ secrets.GITHUB_TOKEN }}
          event: push
          branch: main
          name: android-screenshots-${{ needs.get-tagged.outputs.version }}
          path: android/fastlane/metadata/android/en-US/images/phoneScreenshots/
          search_artifacts: true
          if_no_artifact_found: ignore
      - name: get screenshots count
        id: screenshots
        shell: bash
        run: |
          echo "count=${{ steps.check-exists.outputs.found_artifact }}"
          echo "count=${{ steps.check-exists.outputs.found_artifact }}" >> "$GITHUB_OUTPUT"

  generate-screenshots-and-icons:
    name: generate screenshots
    runs-on: ubuntu-22.04
    environment: prod
    needs:
      - get-tagged
      - check-screenshots-and-icons
    steps:
      - name: clone repo
        run: |
          echo $(whoami)
          sudo mkdir -p "$BUILD_DIR"
          sudo chown $(whoami) "$BUILD_DIR"
          git clone "https://github.com/${{ github.repository }}.git" "$BUILD_DIR"
          cd "$BUILD_DIR"
          git checkout "${{ vars.BUILD_REF || github.sha }}"
          git submodule update --init --recursive
          echo "$BUILD_DIR/submodules/flutter/bin" >> $GITHUB_PATH
      - uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: ${{ env.JAVA_VERSION }}
      - name: setup android sdk
        uses: android-actions/setup-android@v2
      - name: get packages
        working-directory: ${{ env.BUILD_DIR }}
        run: |
          export PUB_CACHE=$(pwd)/.pub-cache
          flutter config --no-analytics
          flutter pub get
      - name: generate screenshots
        uses: reactivecircus/android-emulator-runner@v2
        if: ${{ needs.check-screenshots-and-icons.outputs.screenshots-count == 'false' }}
        with:
          api-level: 32
          target: google_apis
          arch: x86_64
          profile: pixel_4_xl
          script: cd ${{ env.BUILD_DIR }} && make screenshots
      - name: frame screenshots
        if: ${{ needs.check-screenshots-and-icons.outputs.screenshots-count == 'false' }}
        working-directory: ${{ env.BUILD_DIR }}
        run: |
          mv generated/screenshots/android/* android/fastlane/screenshots/en-US/
          cd android && fastlane frameit_now && rm -f $(ls -d fastlane/screenshots/en-US/* | grep -v -e '.*_framed.png')
      - name: upload android screenshots
        if: ${{ needs.check-screenshots-and-icons.outputs.screenshots-count == 'false' }}
        uses: actions/upload-artifact@v3
        with:
          name: android-screenshots-${{ needs.get-tagged.outputs.version }}
          path: ${{ env.BUILD_DIR }}/android/fastlane/screenshots/en-US/
      - name: upload ios screenshots
        if: ${{ needs.check-screenshots-and-icons.outputs.screenshots-count == 'false' }}
        uses: actions/upload-artifact@v3
        with:
          name: ios-screenshots-${{ needs.get-tagged.outputs.version }}
          path: ${{ env.BUILD_DIR }}/generated/screenshots/ios/

  build-android-app:
    name: build android app
    runs-on: ubuntu-22.04
    needs:
      - get-tagged
      - generate-screenshots-and-icons
    environment: prod
    env:
      APP_ID: ${{ vars.APP_ID }}
      APP_LABEL: ${{ vars.APP_LABEL }}
    steps:
      - name: clone repo
        run: |
          echo $(whoami)
          sudo mkdir -p "$BUILD_DIR"
          sudo chown $(whoami) "$BUILD_DIR"
          git clone "https://github.com/${{ github.repository }}.git" "$BUILD_DIR"
          cd "$BUILD_DIR"
          git checkout "${{ vars.BUILD_REF || github.sha }}"
          git submodule update --init --recursive
          echo "$BUILD_DIR/submodules/flutter/bin" >> $GITHUB_PATH
      - uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: ${{ env.JAVA_VERSION }}
      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: ${{ env.RUBY_VERSION }}
          bundler-cache: true
      - name: setup android sdk
        uses: android-actions/setup-android@v2
      - name: get packages
        working-directory: ${{ env.BUILD_DIR }}
        run: |
          export PUB_CACHE=$(pwd)/.pub-cache
          flutter config --no-analytics
          flutter pub get
      - name: build aab and apk
        working-directory: ${{ env.BUILD_DIR }}
        run: |
          echo keyAlias=upload > android/key.properties
          echo storeFile=./upload.jks >> android/key.properties
          echo "keyPassword=$ANDROID_KEY_PASS" >> android/key.properties
          echo "storePassword=$ANDROID_KEY_STORE_PASS" >> android/key.properties
          chmod 0400 android/key.properties
          echo $KEY_STORE_DATA | base64 -d > android/app/upload.jks
          chmod 0400 android/app/upload.jks
          flutter pub run flutter_launcher_icons -f android-icons.yml
          flutter build apk --release --split-per-abi --target-platform=android-arm
          flutter build apk --release --split-per-abi --target-platform=android-x64
          flutter build apk --release --split-per-abi --target-platform=android-arm64
          flutter build appbundle --release
          rm -f android/key.properties android/app/upload.jks
        env:
          KEY_STORE_DATA: ${{ secrets.KEY_STORE_DATA }}
          ANDROID_KEY_PASS: ${{ secrets.ANDROID_KEY_PASS }}
          ANDROID_KEY_STORE_PASS: ${{ secrets.ANDROID_KEY_STORE_PASS }}
      - name: upload release aab
        uses: actions/upload-artifact@v3
        with:
          name: release-aab-${{ needs.get-tagged.outputs.version }}
          path: ${{ env.BUILD_DIR }}/build/app/outputs/bundle/release/
      - name: upload release apk
        uses: actions/upload-artifact@v3
        with:
          name: release-apk-${{ needs.get-tagged.outputs.version }}
          path: ${{ env.BUILD_DIR }}/build/app/outputs/flutter-apk/*.apk 
