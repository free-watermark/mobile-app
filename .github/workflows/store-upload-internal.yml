name: apps deploy
env:
  JAVA_VERSION: 17
  RUBY_VERSION: 3.2.1
  FLUTTER_VERSION: 3.7.6
on:
  push:
    branches:
      - main
jobs:
  generate-screenshots-and-icons:
    name: generate screenshots
    runs-on: macos-12
    environment: prod
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: ${{ env.JAVA_VERSION }}
      - name: install flutter
        uses: subosito/flutter-action@v2
        with:
          channel: stable
          flutter-version: ${{ env.FLUTTER_VERSION }}
      - name: get packages
        run: flutter pub get
      - name: generate icons
        run: make icons
      - name: generate screenshots
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: 32
          target: google_apis
          arch: x86_64
          profile: pixel_5
          script: make screenshots
      - name: frame screenshots
        run: |
          mv generated/screenshots/android/* android/fastlane/screenshots/en-US/
          cd android && fastlane frameit_now && rm -f $(ls fastlane/screenshots/en-US/ | grep -v -e '.*_framed.png')
      - name: upload android assets
        uses: actions/upload-artifact@v3
        with:
          name: android-assets
          path: android/app/src/main/res/
      - name: upload ios assets
        uses: actions/upload-artifact@v3
        with:
          name: ios-assets
          path: ios/Runner/Assets.xcassets/
      - name: upload android screenshots
        uses: actions/upload-artifact@v3
        with:
          name: android-screenshots
          path: android/fastlane/screenshots/en-US/
      - name: upload ios screenshots
        uses: actions/upload-artifact@v3
        with:
          name: ios-screenshots
          path: generated/screenshots/ios/

  upload-to-play-store-internal:
    name: upload to playstore internal
    runs-on: macos-12
    needs: generate-screenshots-and-icons
    environment: prod
    env:
      APP_ID: ${{ vars.APP_ID }}
      APP_LABEL: ${{ vars.APP_LABEL }}
      ANDROID_DEPLOY_TRACK: internal
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: ${{ env.JAVA_VERSION }}
      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: ${{ env.RUBY_VERSION }}
          bundler-cache: true
      - name: install fastlane
        run: gem install fastlane
      - name: install flutter
        uses: subosito/flutter-action@v2
        with:
          channel: stable
          flutter-version: ${{ env.FLUTTER_VERSION }}
      - name: get metadata from google play store
        run: |
          echo $ANDROID_API_SA_JSON_DATA | base64 -d > free-watermark-fastlane-sa.json
          chmod 0400 free-watermark-fastlane-sa.json
          cd android && fastlane supply init
        env:
          ANDROID_API_SA_JSON_DATA: ${{ secrets.ANDROID_API_SA_JSON_DATA }}
      - name: download android assets
        uses: actions/download-artifact@v3
        with:
          name: android-assets
          path: android/app/src/main/res/
      - name: download android screenshots
        uses: actions/download-artifact@v3
        with:
          name: android-screenshots
          path: android/fastlane/metadata/android/en-US/images/phoneScreenshots/
      - name: get packages
        run: flutter pub get
      - name: build aab
        run: |
          echo keyAlias=upload > android/key.properties
          echo storeFile=./upload.jks >> android/key.properties
          echo "keyPassword=$ANDROID_KEY_PASS" >> android/key.properties
          echo "storePassword=$ANDROID_KEY_STORE_PASS" >> android/key.properties
          chmod 0400 android/key.properties
          echo $KEY_STORE_DATA | base64 -d > android/app/upload.jks
          chmod 0400 android/app/upload.jks
          flutter build appbundle --release 
          rm -f android/key.properties android/app/upload.jks
        env:
          KEY_STORE_DATA: ${{ secrets.KEY_STORE_DATA }}
          ANDROID_KEY_PASS: ${{ secrets.ANDROID_KEY_PASS }}
          ANDROID_KEY_STORE_PASS: ${{ secrets.ANDROID_KEY_STORE_PASS }}
      - name: deploy to internal
        run: |
          cd android && fastlane deploy
          rm -f free-watermark-fastlane-sa.json
