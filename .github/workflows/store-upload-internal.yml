name: apps-deploy
env:
  JAVA_VERSION: 17
  RUBY_VERSION: 3.2.1
  FLUTTER_VERSION: 3.7.6
on:
  workflow_run:
    types:
      - completed
    workflows:
      - build-release
jobs:
  get-tagged:
    name: get tagged
    runs-on: macos-12
    environment: prod
    outputs:
      tagged: ${{ steps.gettag.outputs.tagged }}
      version: ${{ steps.gettag.outputs.version }}
    steps:
      - uses: actions/checkout@v3
      - name: get tag
        id: gettag
        shell: bash
        run: |
          echo "version=$(cat pubspec.yaml | grep version: | sed 's#version: ##' | tr -d '\n')" >> "$GITHUB_OUTPUT"
          git show-ref --tags --verify --quiet -- "refs/tags/v$(cat pubspec.yaml | grep version: | sed 's#version: ##' | tr -d '\n')" && echo 'tagged=0' >> "$GITHUB_OUTPUT" || echo 'tagged=1' >> "$GITHUB_OUTPUT"

  upload-to-play-store-internal:
    name: upload to playstore internal
    runs-on: macos-12
    needs: get-tagged
    if: ${{ github.event.workflow_run.conclusion == 'success' && needs.get-tagged.outputs.tagged == '1' }}
    environment: prod
    env:
      APP_ID: ${{ vars.APP_ID }}
      APP_LABEL: ${{ vars.APP_LABEL }}
      ANDROID_DEPLOY_TRACK: internal
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: ${{ env.JAVA_VERSION }}
      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: ${{ env.RUBY_VERSION }}
          bundler-cache: true
      - name: install fastlane
        run: gem install fastlane
      - name: install flutter
        uses: subosito/flutter-action@v2
        with:
          channel: stable
          flutter-version: ${{ env.FLUTTER_VERSION }}
      - name: get metadata from google play store
        run: |
          echo $ANDROID_API_SA_JSON_DATA | base64 -d > free-watermark-fastlane-sa.json
          chmod 0400 free-watermark-fastlane-sa.json
          cd android && fastlane supply init
        env:
          ANDROID_API_SA_JSON_DATA: ${{ secrets.ANDROID_API_SA_JSON_DATA }}
      - name: download android screenshots
        uses: dawidd6/action-download-artifact@v2
        with:
          workflow: build-release.yml
          github_token: ${{ secrets.GITHUB_TOKEN }}
          event: push
          branch: main
          search_artifacts: true
          name: android-screenshots-${{ needs.get-tagged.outputs.version }}
          path: android/fastlane/metadata/android/en-US/images/phoneScreenshots/
      - name: ensure dir exists
        run: |
          mkdir -p build/app/outputs/bundle/release build/app/outputs/flutter-apk/
      - name: download android aab
        uses: dawidd6/action-download-artifact@v2
        with:
          workflow: build-release.yml
          github_token: ${{ secrets.GITHUB_TOKEN }}
          event: push
          branch: main
          name: release-aab-${{ needs.get-tagged.outputs.version }}
          path: build/app/outputs/bundle/release/
      - name: download android apk
        uses: dawidd6/action-download-artifact@v2
        with:
          workflow: build-release.yml
          github_token: ${{ secrets.GITHUB_TOKEN }}
          event: push
          branch: main
          name: release-apk-${{ needs.get-tagged.outputs.version }}
          path: build/app/outputs/flutter-apk/
      - name: deploy to internal
        run: |
          cd android && fastlane deploy
          rm -f free-watermark-fastlane-sa.json
      - name: create release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: "v${{ needs.get-tagged.outputs.version }}"
          files: |
            build/app/outputs/flutter-apk/*.apk
